ARG ALPINE_VERSION=3.11
ARG OUTPUT_DIR=go-bin/
ARG PSERVICE

FROM golang:1.13.10-alpine${ALPINE_VERSION} AS builder

RUN apk update && \
    apk add --no-cache upx make build-base bash git

ENV CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64

WORKDIR /app

# Copy and download dependency using go mod
ADD go.mod go.sum ./
RUN go mod download

COPY . .

# Build binaries
RUN make build-bin

# Compress binaries
RUN upx go-bin/* -1 -q

FROM alpine:${ALPINE_VERSION}

ARG OUTPUT_DIR=go-bin
ARG PSERVICE

ENV PSERVICE=${PSERVICE}

WORKDIR /app
VOLUME ["/app"]

# Note: Using main as app name because CMD doesn't support env expansion and
# Docker images are tagged with app names already.
COPY --from=builder /app/${OUTPUT_DIR}/${PSERVICE} /app/main
COPY --from=builder /app/${OUTPUT_DIR}/${PSERVICE} /app/${PSERVICE}
COPY --from=builder /app/.env.test /app/.env
COPY --from=builder /app/profiles/ /app/profiles

RUN addgroup -S somegroup -g 1000 && adduser -S -G somegroup somebody -u 1000
RUN chown -R somebody:somegroup /app
USER somebody

CMD ["sh", "-c", "./${PSERVICE}"]
