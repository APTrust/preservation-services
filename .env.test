#
# APTrust Preservation Services config file
#

# BASE_WORKING_DIR is the directory under which preservation services
# may create new folders and files. For test and dev, this should be
# ~/tmp. For demo and production, probably /mnt/lvm/apt or something
# similar.
BASE_WORKING_DIR="~/tmp"

# Preservation buckets. Be sure to set these right for each environment.
# For testing, we're using a local Minio server, so we can call these
# whatever we want.
# Preservation buckets. These differ for live, demo, and staging.
# E.g., for staging:
#
# BUCKET_STANDARD_OR="aptrust.staging.preservation.oregon"
# BUCKET_STANDARD_VA="aptrust.staging.preservation"
# BUCKET_GLACIER_OH="aptrust.staging.preservation.glacier.oh"
# BUCKET_GLACIER_OR="aptrust.staging.preservation.glacier.or"
# BUCKET_GLACIER_VA="aptrust.staging.preservation.glacier.va"
# BUCKET_GLACIER_DEEP_OH="aptrust.staging.preservation.glacier-deep.oh"
# BUCKET_GLACIER_DEEP_OR="aptrust.staging.preservation.glacier-deep.or"
# BUCKET_GLACIER_DEEP_VA="aptrust.staging.preservation.glacier-deep.va"
# BUCKET_WASABI_OR="coming-soon"
# BUCKET_WASABI_VA="coming-soon"
#
BUCKET_STANDARD_OR="preservation-or"
BUCKET_STANDARD_VA="preservation-va"
BUCKET_GLACIER_OH="glacier-oh"
BUCKET_GLACIER_OR="glacier-or"
BUCKET_GLACIER_VA="glacier-va"
BUCKET_GLACIER_DEEP_OH="glacier-deep-oh"
BUCKET_GLACIER_DEEP_OR="glacier-deep-or"
BUCKET_GLACIER_DEEP_VA="glacier-deep-va"
BUCKET_WASABI_OR="wasabi-or"
BUCKET_WASABI_VA="wasabi-va"

# INGEST_BUCKET_READER_INTERVAL describes how often the ingest bucket
# reader should scan the receiving buckets for new bags. The reader
# will wait this long after finishing a scan before starting the next
# scan. Use Golang duration strings, e.g. "90s" is 90 seconds, "5m" is
# five minutes, "1h" is one hour.
INGEST_BUCKET_READER_INTERVAL="10s"

# APT_QUEUE_INTERVAL describes how often apt_queue should check for new
# WorkItems.
APT_QUEUE_INTERVAL="20s"

# INGEST_TEMP_DIR is a directory in which preservation services can
# keep temporary files during the ingest process.
INGEST_TEMP_DIR="~/tmp/pres-serv/ingest"

# LOG_DIR is where preservation services writes its log files.
LOG_DIR="~/tmp/logs"

# LOG_LEVEL should be one of: CRITICAL, ERROR, WARNING, NOTICE, INFO
# OR DEBUG. For dev and test, it's usually DEBUG. For demo and prod,
# it should usually be INFO.
LOG_LEVEL=DEBUG

# MAX_DAYS_SINCE_LAST_FIXITY is the maximum number of days allowed
# between fixity checks. Per agreement with depositors, this is 90.
# In dev and test, we occasionally set it lower to force fixity checks
# to run.
MAX_DAYS_SINCE_LAST_FIXITY=90

# MAX_FILE_SIZE is the maximum file the system can handle. Since we're
# working with S3, this is 5TB, or 5497558138880. File size will be lower
# on the demo server, probably more like 5GB, or 5368709120
MAX_FILE_SIZE=5497558138880

# MAX_WORKER_ATTEMPTS is the maximum number of times a worker should
# attempt its job.
MAX_WORKER_ATTEMPTS=3

# NSQ_LOOKUPD is the host name and port of the NSQ lookup daemon.
# By default, it runs on port 4161. Format should be "host:port"
NSQ_LOOKUPD="localhost:4161"

# NSQ_URL is the URL of the NSQ server. It typically runs on port 4151.
# Format should be "http(s)://host:port"
NSQ_URL="http://localhost:4151"

# PHAROS_API_KEY is the API key or token used to make Pharos API calls.
# For test, this key is hard-coded into the Pharos fixtures at
# test/fixtures/user.yml. The Docker container created by
# `make integration` automatically loads these fixtures on startup.
PHAROS_API_KEY="c3958c7b09e40af1d065020484dafa9b2a35cea0"

# PHAROS_API_USER is the email address of the user making Pharos API calls.
# For test, this user is hard-coded into the Pharos test fixtures,
# like the API key above.
PHAROS_API_USER="system@aptrust.org"

# PHAROS_API_VERSION is the current Pharos API version, which should be
# "v2"
PHAROS_API_VERSION="v2"

# PHAROS_URL is the URL of the Pharos server.
PHAROS_URL="http://localhost:9292"

# PROFILES_DIR is the directory that contains BagIt profiles and
# the default.sig signature file for file format identification.
# In dev and test configs, this can be set relative to the project
# root if it begins with "./". In other environments, it should be
# set to an absolute path.
PROFILES_DIR="./profiles"

# REDIS_DEFAULT_DB is the number of the Redis DB in which preservation
# services keeps its data. This should be 0 in most cases.
REDIS_DEFAULT_DB= 0

# REDIS_PASSWORD is the password requried to connect to the Redis
# server. In dev and test, this should be an empty string.
REDIS_PASSWORD=""

# REDIS_RETRIES is the number of times we should try to get a record
# from Redis. This is helpful in testing, as our test code often requests
# recently-inserted data before Redis is able to return it.
REDIS_RETRIES=3

# REDIS_RETRY_MS is the number of milliseconds between retries when
# we retry Redis requests.
REDIS_RETRY_MS=250ms

# REDIS_URL is the URL of the Redis server in the format "host:port".
# The default port is 6379. For dev and test, this should be localhost:6379.
REDIS_URL="localhost:6379"

# REDIS_USER is the user name required to connect to Redis. For dev and
# test, this should be an empty string.
REDIS_USER= ""

# RESTORE_DIR is the directory in which preservation services should build
# the bags it's restoring.
RESTORE_DIR="~/tmp/pres-serv/restore"

# STAGING_BUCKET is the name of the bucket into which ingest workers copy
# files for staging, before they are fully ingested.
STAGING_BUCKET="staging"

# STAGING_UPLOAD_RETRIES is the number of times an ingest worker will
# try to upload a file to the staging bucket.
STAGING_UPLOAD_RETRIES=3

# STAGING_UPLOAD_RETRY_MS is the number of milliseconds to wait before
# retrying an upload to the S3 staging bucket.
STAGING_UPLOAD_RETRY_MS=250ms

# VOLUME_SERVICE_URL is the URL for the local volume server. This will
# always be on localhost, typically http://localhost:8898
VOLUME_SERVICE_URL="http://localhost:8898"

# Connection info for local S3 service. This is a minio server that
# runs in dev/test, but not demo/production.
# For localhost testing, use 'localhost' instead of '127.0.0.1' because
# Minio signed URLs use hostname, not IP.
S3_LOCAL_HOST="localhost:9899"
S3_LOCAL_KEY="minioadmin"
S3_LOCAL_SECRET="minioadmin"

# AWS S3 connection info. In dev/test, point back to the local S3
# provider, so we can't overwrite anything in demo/prod.
# For localhost testing, use 'localhost' instead of '127.0.0.1' because
# Minio signed URLs use hostname, not IP.
S3_AWS_HOST="localhost:9899"
S3_AWS_KEY="minioadmin"
S3_AWS_SECRET="minioadmin"

# Wasabi S3 connection info.In dev/test, point back to the local S3
# provider, so we can't overwrite anything in demo/prod.
# For localhost testing, use 'localhost' instead of '127.0.0.1' because
# Minio signed URLs use hostname, not IP.
S3_WASABI_HOST_OR="localhost:9899"
S3_WASABI_HOST_VA="localhost:9899"
S3_WASABI_KEY="minioadmin"
S3_WASABI_SECRET="minioadmin"
