---
version: '3.7'
services:
   ingest_bucket_reader: &default
      image: aptrust/ingest_bucket_reader:${DOCKER_TAG_NAME:-latest}
      restart: always
      volumes:
         - type: bind
           source: "${DOCKER_DATA_PATH:-./docker}"
           target: /app/data
         - type: bind
           source: "${DOCKER_DATA_PATH:-./docker}"
           target: /app/logs
         - type: bind
           source: ".env.docker"
           target: /app/.env
      env_file:
         - .env.docker
      networks:
         - default
         - gateway
   ingest_cleanup:
      image: aptrust/ingest_cleanup:${DOCKER_TAG_NAME:-latest}
      restart: always
      <<: *default
   ingest_format_identifier:
      image: aptrust/ingest_format_identifier:${DOCKER_TAG_NAME:-latest}
      <<: *default
   ingest_pre_fetch:
      image: aptrust/ingest_pre_fetch:${DOCKER_TAG_NAME:-latest}
      <<: *default
   ingest_preservation_uploader:
      image: aptrust/ingest_preservation_uploader:${DOCKER_TAG_NAME:-latest}
      <<: *default
   ingest_preservation_verifier:
      image: aptrust/ingest_preservation_verifier:${DOCKER_TAG_NAME:-latest}
      <<: *default
   ingest_recorder:
      image: aptrust/ingest_recorder:${DOCKER_TAG_NAME:-latest}
      <<: *default
   ingest_staging_uploader:
      image: aptrust/ingest_staging_uploader:${DOCKER_TAG_NAME:-latest}
      <<: *default
   ingest_validator:
      image: aptrust/ingest_validator:${DOCKER_TAG_NAME:-latest}
      <<: *default
   reingest_manager:
      image: aptrust/ingest_validator:${DOCKER_TAG_NAME:-latest}
      <<: *default
   apt_queue:
      image: aptrust/apt_queue:${DOCKER_TAG_NAME:-latest}
      <<: *default
   apt_delete:
      image: aptrust/apt_delete:${DOCKER_TAG_NAME:-latest}
      <<: *default
   apt_fixity:
      image: aptrust/apt_fixity:${DOCKER_TAG_NAME:-latest}
      <<: *default
   bag_restorer:
      image: aptrust/bag_restorer:${DOCKER_TAG_NAME:-latest}
      <<: *default
   file_restorer:
      image: aptrust/file_restorer:${DOCKER_TAG_NAME:-latest}
      <<: *default
   glacier_restorer:
      image: aptrust/glacier_restorer:${DOCKER_TAG_NAME:-latest}
      <<: *default
   nsqlookupd:
      image: nsqio/nsq:v1.2.0
      restart: always
      hostname: nsqlookupd
      command: /nsqlookupd
      volumes:
         - type: bind
           source: "${DOCKER_DATA_PATH:-./docker}/nsq"
           target: /data
      ports:
         - "4160:4160"
         - "4161:4161"
      env_file:
         - .env.docker
   nsqd:
      image: nsqio/nsq:v1.2.0
      hostname: nsqd
      restart: always
      command: /nsqd --lookupd-tcp-address=${NSQ_LOOKUPD_TCP_ADDRESS} --data-path=/data --broadcast-address=${NSQ_BROADCAST_ADDRESS} --msg-timeout=${NSQ_MSG_TIMEOUT} --max-msg-timeout=${NSQ_MAX_MSG_TIMEOUT} --max-msg-size=${NSQ_MAX_MSG_SIZE} -mem-queue-size=${NSQ_MEM_QUEUE_SIZE} -max-req-timeout=${NSQ_MAX_REQ_TIMEOUT} -max-heartbeat-interval=${NSQ_MAX_HEARTBEAT_INTERVAL}
      volumes:
         - type: bind
           source: "${DOCKER_DATA_PATH:-./docker}/nsq"
           target: /data
      env_file:
         - .env.docker
      networks:
         - default
         - gateway
      depends_on:
         - nsqlookupd
      ports:
         - "4150:4150"
         - "4151:4151"
# TODO: needs labels for basicauth and routable address
   nsqadmin:
      image: nsqio/nsq:v1.2.0
      restart: always
      command: /nsqadmin --lookupd-http-address=${NSQ_LOOKUPD_HTTP_ADDRESS}
      depends_on:
         - nsqlookupd
      env_file:
         - .env.docker
      networks:
         - default
         - gateway
      ports:
         - "4171:4171"
   redis:
      image: redis:6.0-alpine
      restart: always
      command: redis-server --appendonly yes
      volumes:
         - type: bind
           source: "${DOCKER_DATA_PATH:-./docker}/redis"
           target: /data
      env_file:
         - .env.docker
      networks:
         - default
      ports:
         - "6479:6379"
   minio:
      image: minio/minio:latest
      restart: always
      command: server /data
      volumes:
         - type: bind
           source: "${DOCKER_DATA_PATH:-./docker}/minio"
           target: /data
      env_file:
         - .env.docker
      networks:
         - default
         - gateway
      ports:
         - "9000:9000"
networks:
   gateway:
      external:
         name: gateway
   default:
